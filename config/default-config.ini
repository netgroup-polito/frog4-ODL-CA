# ----------------------------------------------------------------------
# 	RULES and WARNINGS
# ----------------------------------------------------------------------
#	1) Do not delete any field
#	2) Use relative paths only (respect of the root directory)
#	3) Paths must not start with "/"
# ----------------------------------------------------------------------

[domain_orchestrator]
# TCP port used by the SDN-DO for receiving commands through its rest API
port = 10000
ip = 0.0.0.0
# in debug mode network controller is not involved
debug = false

[vlan]
# List of VLAN ids
available_ids = 280-289,62,737,90-95,290-299,13-56,92,57-82

[physical_ports]
# List of physical ports that will be attached the infrastructure layer,
# each to the specified device.
# If you don't need to add ports, please use an empty dictionary
# Ignored if ovsdb_support is not enabled
ports = {}
# ports = {"eth1":"s2", "eth2":"s3"}
# bridge used to set up gre tunnels
gre_bridge = s1
gre_bridge_id = of:0000000000000001

[authentication]
token_expiration = 86400

[log]
file = log.log
verbose = true
debug = true


[database]
connection = sqlite:///db.sqlite3
database_name = config/db.dump.sql


[network_controller]
# "controller_name" allowed options: OpenDayLight, ONOS
#controller_name = OpenDayLight
controller_name = ONOS


[opendaylight]
# This information are meaningful only in case you use the OpenDaylight SDN controller
# "odl_version" allowed options: Hydrogen, Helium, Lithium
odl_username = admin
odl_password = admin
odl_version = Lithium
odl_endpoint = http://127.0.0.1:8181


[onos]
# This information are meaningful only in case you use the OpenDaylight SDN controller
# "onos_version" allowed options: Falcon
onos_username = onos
onos_password = rocks
onos_version = Falcon
onos_endpoint = http://192.168.123.1:8181


[ovsdb]
# enable support for ovsdb, obviusly does not work for physical devices
ovsdb_support = false
ovsdb_node_ip = 192.168.123.2
ovsdb_node_port = 6632
ovsdb_ip = 192.168.123.1


[messaging]
# To enable double decker messaging set dd_activate true.
dd_activate = false
#How the frog4-orchestrator is identified on the message bus
dd_name = odl_example
#IP address and TCP port to be used to contact the broker
dd_broker_address = tcp://127.0.0.2:5555
dd_tenant_name = public
#File containing the key to be used to send messages on the message bus
dd_tenant_key = keys/public-keys.json

[nf_configuration]
# Enable the initial configuration of nf at deployment time
initial_configuration = false
# Endpoint to reach the configuration service
config_service_endpoint = http://127.0.0.1:8080


[domain_description]
domain_description_topic = frog:domain-description
# File that contain the descriptio of the domain from the point of view of networking
domain_description_file = config/description.json
domain_description_dynamic_file = config/description_run.json
capabilities_app_name = it.polito.onosapp.apps-capabilities
# Set the following parameter to 'true' to enable the dynamic discovery of functional capabilities
# This requires that the application 'it.polito.onosapp.apps-capabilities' is installed and activated
# in the SDN controller
discover_capabilities = false

[other_options]
# console_print enable some print output in the server console (set true)
console_print = true
# set this flag basing on how interfaces are called on the domain description file:
# true: phisical interface names (e.g., s2-eth1 - column 'name' in table ports of onos gui)
# false: controller port ids (e.g., 1, 2, 3... - column 'id' in table ports of onos gui)
use_interfaces_names = true
# disable some features that are not compatible with Jolnet Flowvisor
jolnet = false
